language: rust

# pyo3 currently is only supported by the nightly version
rust:
  - nightly

# Cache cargo symbols for faster build
cache: cargo

# In future we could also add windows testing
jobs:
  include:
    - os: linux
      dist: bionic
    - os: osx
      osx_image: "xcode11.5"

# Dependencies of kcov, used by coverage
addons:
  apt:
    packages:
      - kcov
      - libiberty-dev
      - zlib1g-dev
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - binutils-dev
      - cmake # also required for cargo-update
      - python3
      - python3-pip
      - python3-setuptools

before_install:
  - curl -L https://github.com/SimonKagstrom/kcov/archive/v34.tar.gz | tar xf -
      
before_script:
  - export PATH=$HOME/.cargo/bin:$PATH
  - source ~/.bashrc
  - source ~/.cargo/env
  - cargo install cargo-update || echo "cargo-update already installed"
  - cargo install-update -a # update outdated cached binaries
  - python3 -m pip install maturin pytest coveralls
  - python3 -m pip install -r requirements.txt

# the main build
script:
  # Build, test, bench the graph crate
  - cargo build --verbose --all --manifest-path=graph/Cargo.toml
  - cargo test --verbose --all --manifest-path=graph/Cargo.toml
  # - cargo bench --verbose --all --manifest-path=graph/Cargo.toml
  # Clearing up target directory
  - rm -fdr target
  # Build the bindings
  - maturin build --release
  # Install the binding
  - python3 -m pip install --user --upgrade ./target/wheels/*.whl
  # Run the python tests
  - python3 -m pytest -s ./pytests
  # Get the coverage for the graph crate
  - |
    for TEST in $$(find ./target/debug/deps -executable -type f | grep test);\
    do \
      mkdir -p ./target/debug/cov/$$TEST ;\
      kcov --coveralls-id=$TRAVIS_JOB_ID --exclude-pattern=/.rustup,/.cargo ./target/debug/cov/$$(basename $$TEST) $$TEST ;\
    done
      
  - bash <(curl -s https://codecov.io/bash)
    