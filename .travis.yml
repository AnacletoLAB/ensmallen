language: rust

# pyo3 currently is only supported by the nightly version
rust:
  - nightly

# Cache cargo symbols for faster build
cache: cargo

# In future we could also add windows testing
jobs:
  include:
    - os: linux
      dist: bionic
    - os: osx
      osx_image: "xcode7.3"

# Dependencies of kcov, used by coverage
addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - binutils-dev
      - cmake # also required for cargo-update
      - python3
      - python3-pip
      - python3-setuptools

before_install:
  - curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -
      
before_script:
  - export PATH=$HOME/.cargo/bin:$PATH
  - cargo install cargo-update || echo "cargo-update already installed"
  - cargo install-update -a # update outdated cached binaries
  - python3 -m pip install maturin pytest coveralls
  - python3 -m pip install -r requirements.txt

# the main build
script:
  # Build, test, bench the graph crate
  - cargo build --verbose --all --manifest-path=graph/Cargo.toml
  - cargo test --verbose --all --manifest-path=graph/Cargo.toml
  - cargo bench --verbose --all --manifest-path=graph/Cargo.toml
  # Build the bindings
  - maturin build --release
  # Install the binding
  - python3 -m pip install --user --upgrade ./target/wheels/*.whl
  # Run the python tests
  - python3 -m pytest -s ./pytests
  # Get the coverage for the graph crate
  # This is done as the last step because we have to re-build the crate with no
  # optimizations
  - export CARGO_INCREMENTAL=0
  - export RUSTFLAGS="-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort"
  - export RUSTDOCFLAGS="-Cpanic=abort"
  - cargo build --verbose $CARGO_OPTIONS --manifest-path=graph/Cargo.toml
  - cargo test --verbose $CARGO_OPTIONS --manifest-path=graph/Cargo.toml
  # Generate report and sed it to codecov
  - zip -0 ccov.zip `find . \( -name "graph-*.gc*" \) -print`
  - ./grcov ccov.zip -s . -t lcov --llvm --branch --ignore-not-existing --ignore "/*" -o lcov.info
  - bash <(curl -s https://codecov.io/bash) -f lcov.info
  # Generate coveralls doc
  - ./grcov ./graph/target/debug -t coveralls -s ./graph --token IiIxQt2aP1pBG7aRBIHlbHz2fzdcCT52QlZlH > coveralls.json
  - curl -X POST -H "Content-Type: application/json" -F 'json_file=@coveralls.json' https://coveralls.io/api/v1/jobs