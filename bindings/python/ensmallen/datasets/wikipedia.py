"""Module providing graphs available from Wikipedia."""
from ..ensmallen import Graph  # pylint: disable=import-error
from .wikipedia_automatic_graph_retrieval import WikipediaAutomaticallyRetrievedGraph

def WikiMediaRU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaRU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaRU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSV(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSV graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSV",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaBE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaBE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaBE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiHO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiHO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiHO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiIO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiIO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiIO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiTA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiTA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiTA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsPL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsPL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsPL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageRU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageRU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageRU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksPS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksPS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksPS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiCS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiCS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiCS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSC(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSC graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSC",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksGA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksGA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksGA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiOM(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiOM graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiOM",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksFA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksFA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksFA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiTT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiTT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiTT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiHZ(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiHZ graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiHZ",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsCS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsCS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsCS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsBS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsBS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsBS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksIE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksIE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksIE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksHE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksHE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksHE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksUK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksUK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksUK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiversityEL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiversityEL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiversityEL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksTK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksTK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksTK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourcePT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourcePT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourcePT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteIS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteIS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteIS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceZH(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceZH graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceZH",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksCY(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksCY graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksCY",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiKU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiKU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiKU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksSI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksSI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksSI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteCO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteCO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteCO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsSV(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsSV graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsSV",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiPL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiPL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiPL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteTH(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteTH graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteTH",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiLB(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiLB graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiLB",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksEN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksEN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksEN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourcePA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourcePA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourcePA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsTA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsTA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsTA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiversityJA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiversityJA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiversityJA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaNG(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaNG graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaNG",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageEN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageEN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageEN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksLA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksLA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksLA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiIS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiIS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiIS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteKU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteKU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteKU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageUK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageUK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageUK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiCO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiCO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiCO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceSR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceSR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceSR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageHE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageHE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageHE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuotePL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuotePL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuotePL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceEU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceEU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceEU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiTH(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiTH graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiTH",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteLB(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteLB graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteLB",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksLT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksLT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksLT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceTE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceTE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceTE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceFO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceFO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceFO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteSV(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteSV graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteSV",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageFA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageFA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageFA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteTA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteTA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteTA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsTH(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsTH graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsTH",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksHY(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksHY graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksHY",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyagePS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyagePS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyagePS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksSU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksSU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksSU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteBS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteBS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteBS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksRU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksRU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksRU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteCS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteCS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteCS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiKI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiKI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiKI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksBE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksBE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksBE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiversityDE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiversityDE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiversityDE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteTT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteTT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteTT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiEL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiEL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiEL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceDA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceDA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceDA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiHR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiHR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiHR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteVO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteVO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteVO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksFI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksFI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksFI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteWO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteWO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteWO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteJA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteJA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteJA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageEO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageEO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageEO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteKA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteKA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteKA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiTI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiTI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiTI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaID(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaID graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaID",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksAK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksAK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksAK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceET(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceET graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceET",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiIG(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiIG graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiIG",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksXH(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksXH graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksXH",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiversitySV(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiversitySV graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiversitySV",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksNO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksNO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksNO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteBG(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteBG graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteBG",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksSA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksSA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksSA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteDE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteDE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteDE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceMR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceMR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceMR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiAA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiAA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiAA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsEL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsEL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsEL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksES(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksES graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksES",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteCR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteCR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteCR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiversityCS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiversityCS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiversityCS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteBR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteBR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteBR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiGV(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiGV graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiGV",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteNL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteNL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteNL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiRW(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiRW graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiRW",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaNZ(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaNZ graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaNZ",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageES(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageES graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageES",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSW(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSW graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSW",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNY(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNY graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNY",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksGU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksGU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksGU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaBD(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaBD graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaBD",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBG(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBG graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBG",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksKK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksKK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksKK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksMI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksMI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksMI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiDE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiDE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiDE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiEE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiEE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiEE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksLI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksLI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksLI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiCR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiCR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiCR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceRO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceRO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceRO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsJA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsJA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsJA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaNO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaNO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaNO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteEL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteEL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteEL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksID(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksID graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksID",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsDE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsDE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsDE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteHR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteHR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteHR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiLV(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiLV graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiLV",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsNL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsNL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsNL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiWO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiWO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiWO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiJA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiJA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiJA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiKA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiKA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiKA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksBM(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksBM graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksBM",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteSK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteSK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteSK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceFR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceFR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceFR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksEO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksEO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksEO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageFI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageFI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageFI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsBG(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsBG graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsBG",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiFJ(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiFJ graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiFJ",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaFI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaFI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaFI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiIE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiIE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiIE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiHE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiHE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiHE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiUK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiUK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiUK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteLA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteLA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteLA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiTK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiTK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiTK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiversityFI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiversityFI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiversityFI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaCO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaCO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaCO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceCA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceCA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceCA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiOR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiOR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiOR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsFA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsFA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsFA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteLT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteLT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteLT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksPL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksPL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksPL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksLB(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksLB graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksLB",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiEN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiEN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiEN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNG(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNG graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNG",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiCY(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiCY graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiCY",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksKU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksKU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksKU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsEN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsEN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsEN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteHY(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteHY graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteHY",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiPS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiPS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiPS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksTA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksTA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksTA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiKJ(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiKJ graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiKJ",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteNN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteNN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteNN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksSV(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksSV graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksSV",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceVI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceVI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceVI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsHE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsHE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsHE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiversityES(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiversityES graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiversityES",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksTT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksTT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksTT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiAV(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiAV graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiAV",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsUK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsUK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsUK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaMK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaMK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaMK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMH(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMH graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMH",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteBE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteBE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteBE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiGA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiGA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiGA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiFA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiFA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiFA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksBS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksBS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksBS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteSU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteSU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteSU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksCS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksCS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksCS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceGL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceGL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceGL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteRU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteRU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteRU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiTW(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiTW graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiTW",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiHY(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiHY graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiHY",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiYI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiYI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiYI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceHT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceHT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceHT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksMK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksMK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksMK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceIT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceIT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceIT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageSV(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageSV graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageSV",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaUA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaUA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaUA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiCE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiCE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiCE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteGA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteGA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteGA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteFA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteFA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteFA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiRU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiRU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiRU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksIS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksIS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksIS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceML(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceML graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceML",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteHE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteHE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteHE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteUK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteUK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteUK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiLA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiLA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiLA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaPL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaPL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaPL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceAR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceAR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceAR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteTK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteTK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteTK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsRU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsRU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsRU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyagePL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyagePL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyagePL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiJV(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiJV graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiJV",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiKV(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiKV graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiKV",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiLT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiLT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiLT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteEN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteEN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteEN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksTH(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksTH graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksTH",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksBO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksBO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksBO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksCO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksCO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksCO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceKN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceKN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceKN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteCY(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteCY graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteCY",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageDE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageDE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageDE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteKK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteKK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteKK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaNL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaNL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaNL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteGU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteGU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteGU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaBR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaBR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaBR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceSL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceSL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceSL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceHU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceHU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceHU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiXH(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiXH graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiXH",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageNL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageNL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageNL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsFI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsFI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsFI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiST(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiST graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiST",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiES(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiES graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiES",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteLI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteLI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteLI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksAA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksAA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksAA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksNE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksNE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksNE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiFI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiFI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiFI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksSK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksSK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksSK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteBM(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteBM graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteBM",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiKW(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiKW graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiKW",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksHR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksHR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksHR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceAS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceAS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceAS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksEL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksEL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksEL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteID(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteID graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteID",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsES(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsES graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsES",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksBN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksBN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksBN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceWA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceWA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceWA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsNO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsNO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsNO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceKO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceKO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceKO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageJA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageJA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageJA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteEO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteEO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteEO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiversityEN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiversityEN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiversityEN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiAK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiAK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiAK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaCN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaCN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaCN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksVO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksVO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksVO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteFI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteFI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteFI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksJA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksJA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksJA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksKA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksKA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksKA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBM(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBM graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBM",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteKW(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteKW graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteKW",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiOS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiOS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiOS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsLI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsLI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsLI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiDZ(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiDZ graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiDZ",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceHI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceHI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceHI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksLV(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksLV graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksLV",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageBN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageBN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageBN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiID(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiID graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiID",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageEL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageEL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageEL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSH(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSH graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSH",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiEO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiEO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiEO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceTR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceTR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceTR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteNO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteNO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteNO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteSA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteSA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteSA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksBG(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksBG graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksBG",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiKK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiKK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiKK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksSW(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksSW graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksSW",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiGU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiGU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiGU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsEO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsEO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsEO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiAB(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiAB graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiAB",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksNL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksNL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksNL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiversityRU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiversityRU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiversityRU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteES(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteES graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteES",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksDE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksDE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksDE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceAZ(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceAZ graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceAZ",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiLI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiLI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiLI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksSR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksSR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksSR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyagePT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyagePT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyagePT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiKN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiKN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiKN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksTE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksTE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksTE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsIT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsIT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsIT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceLT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceLT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceLT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMY(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMY graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMY",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksEU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksEU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksEU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaPT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaPT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaPT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteSQ(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteSQ graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteSQ",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceJV(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceJV graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceJV",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteCA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteCA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteCA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageZH(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageZH graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageZH",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiML(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiML graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiML",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiversityHI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiversityHI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiversityHI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceLA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceLA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceLA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiAR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiAR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiAR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteKR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteKR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteKR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNV(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNV graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNV",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceBE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceBE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceBE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceRU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceRU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceRU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteGL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteGL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteGL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBH(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBH graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBH",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiCH(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiCH graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiCH",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsAR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsAR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsAR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiTO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiTO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiTO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiIA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiIA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiIA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiHA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiHA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiHA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksMS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksMS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksMS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiOC(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiOC graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiOC",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteVI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteVI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteVI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSM(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSM graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSM",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksZA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksZA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksZA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiRM(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiRM graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiRM",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceHY(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceHY graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceHY",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiHT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiHT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiHT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiIT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiIT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiIT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceYI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceYI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceYI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiUZ(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiUZ graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiUZ",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceFA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceFA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceFA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiKR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiKR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiKR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsCA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsCA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsCA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsSQ(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsSQ graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsSQ",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiGL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiGL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiGL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsSD(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsSD graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsSD",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiFY(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiFY graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiFY",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiKG(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiKG graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiKG",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiversitySL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiversitySL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiversitySL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaAM(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaAM graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaAM",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksTL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksTL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksTL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiAN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiAN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiAN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteIT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteIT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteIT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteUZ(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteUZ graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteUZ",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceCY(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceCY graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceCY",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiversityKO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiversityKO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiversityKO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSD(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSD graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSD",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksZH(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksZH graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksZH",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteKN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteKN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteKN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksPA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksPA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksPA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceEN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceEN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceEN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiTS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiTS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiTS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSQ(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSQ graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSQ",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiCA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiCA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiCA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceOR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceOR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceOR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksKM(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksKM graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksKM",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteML(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteML graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteML",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceUK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceUK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceUK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksPT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksPT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksPT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteAR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteAR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteAR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiDV(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiDV graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiDV",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceHE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceHE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceHE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiAZ(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiAZ graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiAZ",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceLI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceLI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceLI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiKS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiKS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiKS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksRO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksRO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksRO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksNA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksNA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksNA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsTR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsTR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsTR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteHU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteHU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteHU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiversityIT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiversityIT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiversityIT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceGU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceGU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceGU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteSL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteSL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteSL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteAF(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteAF graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteAF",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksMN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksMN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksMN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksLN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksLN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksLN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiTR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiTR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiTR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiUR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiUR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiUR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceEO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceEO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceEO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiCU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiCU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiCU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksKY(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksKY graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksKY",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteKO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteKO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteKO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiII(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiII graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiII",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiHI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiHI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiHI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiUG(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiUG graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiUG",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiTG(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiTG graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiTG",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceID(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceID graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceID",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaET(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaET graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaET",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiversityAR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiversityAR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiversityAR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksQU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksQU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksQU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaRS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaRS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaRS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksFR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksFR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksFR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiAF(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiAF graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiAF",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsHU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsHU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsHU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksET(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksET graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksET",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteTR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteTR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteTR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteUR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteUR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteUR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageFR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageFR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageFR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaGR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaGR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaGR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiKO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiKO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiKO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaWB(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaWB graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaWB",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiWA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiWA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiWA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteHI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteHI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteHI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksYO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksYO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksYO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksDA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksDA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksDA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteUG(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteUG graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteUG",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiAS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiAS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiAS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksCV(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksCV graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksCV",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceFI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceFI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceFI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiGD(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiGD graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiGD",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceES(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceES graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceES",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiTN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiTN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiTN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksMR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksMR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksMR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteAZ(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteAZ graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteAZ",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteKS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteKS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteKS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksZU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksZU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksZU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageRO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageRO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageRO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksMG(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksMG graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksMG",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiIU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiIU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiIU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksAY(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksAY graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksAY",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiHU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiHU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiHU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceSA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceSA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceSA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsKO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsKO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsKO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceNO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceNO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceNO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksGN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksGN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksGN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksIA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksIA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksIA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiAM(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiAM graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiAM",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageVI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageVI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageVI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksCH(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksCH graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksCH",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksIT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksIT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksIT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceMK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceMK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceMK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksUZ(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksUZ graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksUZ",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksOC(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksOC graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksOC",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiFO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiFO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiFO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsSR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsSR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsSR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiZA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiZA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiZA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksRM(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksRM graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksRM",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceTH(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceTH graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceTH",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksMY(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksMY graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksMY",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiEU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiEU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiEU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiTE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiTE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiTE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiIK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiIK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiIK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaCA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaCA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaCA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksKN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksKN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksKN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteZH(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteZH graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteZH",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksAR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksAR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksAR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuotePT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuotePT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuotePT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksML(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksML graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksML",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceIS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceIS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceIS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSG(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSG graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSG",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiversityFR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiversityFR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiversityFR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteEU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteEU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteEU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourcePL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourcePL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourcePL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaAR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaAR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaAR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiLO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiLO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiLO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteTE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteTE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteTE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiPA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiPA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiPA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiFF(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiFF graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiFF",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaGE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaGE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaGE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiZH(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiZH graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiZH",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteSR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteSR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteSR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiPT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiPT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiPT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksCA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksCA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksCA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksBA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksBA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksBA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiKM(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiKM graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiKM",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksSQ(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksSQ graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksSQ",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiTY(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiTY graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiTY",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsPT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsPT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsPT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteAM(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteAM graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteAM",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceBS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceBS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceBS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksGL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksGL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksGL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceCS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceCS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceCS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiRN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiRN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiRN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageIT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageIT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageIT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceTA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceTA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceTA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiTL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiTL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiTL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceSV(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceSV graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceSV",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksVI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksVI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksVI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteZA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteZA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteZA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsZH(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsZH graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsZH",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksFY(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksFY graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksFY",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksSE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksSE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksSE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiKY(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiKY graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiKY",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksTR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksTR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksTR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteET(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteET graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteET",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksUR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksUR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksUR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiLN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiLN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiLN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiKL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiKL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiKL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceJA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceJA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceJA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsRO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsRO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsRO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiFR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiFR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- frwiki
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiFR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaMX(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaMX graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaMX",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksHI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksHI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksHI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksUG(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksUG graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksUG",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteDA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteDA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteDA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksTG(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksTG graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksTG",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiRO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiRO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiRO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNewsFR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNewsFR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNewsFR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiNA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiNA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiNA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceBR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceBR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceBR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksKS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksKS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksKS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceNL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceNL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceNL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteMR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteMR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteMR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceDE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceDE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceDE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksAZ(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksAZ graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksAZ",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaDK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaDK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaDK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceBG(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceBG graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceBG",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteRO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteRO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteRO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksBI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksBI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksBI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteNA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteNA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteNA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiZU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiZU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiZU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksSL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksSL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksSL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiGN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiGN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiGN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiAY(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiAY graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiAY",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksHU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksHU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksHU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiPI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiPI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiPI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiLG(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiLG graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiLG",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMG(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMG graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMG",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksKO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksKO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksKO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiversityZH(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiversityZH graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiversityZH",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksWA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksWA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksWA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageHI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageHI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageHI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceBN(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceBN graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceBN",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteKY(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteKY graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteKY",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiET(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiET graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiET",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksAF(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksAF graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksAF",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaHI(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaHI graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaHI",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaSE(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaSE graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaSE",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteFR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteFR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteFR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceSK(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceSK graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceSK",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiVoyageTR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiVoyageTR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiVoyageTR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiCV(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiCV graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiCV",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceEL(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceEL graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceEL",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiMediaTR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiMediaTR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiMediaTR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiBooksAS(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiBooksAS graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiBooksAS",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiQuoteQU(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiQuoteQU graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiQuoteQU",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiversityPT(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiversityPT graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiversityPT",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiYO(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiYO graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiYO",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiDA(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiDA graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiDA",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

def WikiSourceHR(
    directed: bool = False,
    load_nodes: bool = True,
    load_node_types: bool = True,
    keep_nodes_without_descriptions: bool = True,
    keep_nodes_without_categories: bool = True,
    keep_interwikipedia_nodes: bool = True,
    keep_external_nodes: bool = True,
    compute_node_description: bool = False,
    auto_enable_tradeoffs: bool = True,
    sort_tmp_dir: str = None,
    verbose: int = 2,
    cache: bool = True,
    cache_path: str = None,
    cache_sys_var: str = "GRAPH_CACHE_DIR",
    version: str = "latest",
    **graph_kwargs
) -> Graph:
    """Return new instance of the WikiSourceHR graph.

    The graph is automatically retrieved from the Wikipedia repository.	

    Parameters
    -------------------
    directed: bool = False
        Wether to load the graph as directed or undirected.
        By default false.
    load_nodes: bool = True
        Whether to load the nodes vocabulary or treat the nodes
        simply as a numeric range.
    load_node_types: bool = True
        Whether to load the node types or skip them entirely.
        This feature is only available when the preprocessing is enabled.
    keep_nodes_without_descriptions: bool = True
        Whether to keep the nodes laking a description
    keep_nodes_without_categories: bool = True
        Whether to keep the nodes laking a category
    keep_interwikipedia_nodes: bool = True
        Whether to keep nodes from external wikipedia websites
    keep_external_nodes: bool = True
        Whether to keep nodes from external websites (non wikipedia ones).
    compute_node_description: bool = False
        Whether to compute the node descriptions.
        Note that this will significantly increase the side of the node lists!
    auto_enable_tradeoffs: bool = True
        Whether to enable the Ensmallen time-memory tradeoffs in small graphs
        automatically. By default True, that is, if a graph has less than
        50 million edges. In such use cases the memory expenditure is minimal.
    sort_tmp_dir: str = None
        Which folder to use to store the temporary files needed to sort in 
        parallel the edge list when building the optimal preprocessed file.
        This defaults to the same folder of the edge list when no value is 
        provided.
    verbose: int = 2
        Wether to show loading bars during the retrieval and building
        of the graph.
    cache: bool = True
        Whether to use cache, i.e. download files only once
        and preprocess them only once.
    cache_path: str = None
        Where to store the downloaded graphs.
        If no path is provided, first we check the system variable
        provided below is set, otherwise we use the directory `graphs`.
    cache_sys_var: str = "GRAPH_CACHE_DIR"
        The system variable with the default graph cache directory.
    version: str = "latest"
        The version of the graph to retrieve.	
		The available versions are:
			- 20210720
			- 20210801
			- 20210820
			- 20210901
			- 20210920
			- 20211001
			- 20211020
			- 20211101
			- 20211120
			- 20211201
			- latest
    graph_kwargs
        Additional graph kwargs.	
	
	
    """
    return WikipediaAutomaticallyRetrievedGraph(
        graph_name="WikiSourceHR",
        version=version,
        directed=directed,
        load_nodes=load_nodes,
        load_node_types=load_node_types,
        keep_nodes_without_descriptions=keep_nodes_without_descriptions,
        keep_nodes_without_categories=keep_nodes_without_categories,
        keep_interwikipedia_nodes=keep_interwikipedia_nodes,
        keep_external_nodes=keep_external_nodes,
        compute_node_description=compute_node_description,
        auto_enable_tradeoffs=auto_enable_tradeoffs,
        sort_tmp_dir=sort_tmp_dir,
        verbose=verbose,
        cache=cache,
        cache_path=cache_path,
        cache_sys_var=cache_sys_var,
        graph_kwargs=graph_kwargs
    )()

