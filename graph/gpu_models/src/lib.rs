/// The path to the PTX generated by the GPU code
const PTX: &str = include_str!("../../cuda_kernels/target/nvptx64-nvidia-cuda/release/cuda_kernels.ptx");

mod wrappers;
use wrappers::*;

pub fn add_one(vals: &[usize]) -> Result<Vec<usize>, GPUError> {
    let mut gpu = GPU::new(0)?;
    let mut ptx = gpu.load_ptx(PTX)?;

    let kernel = ptx.get_kernel("test_kernel")?;

    let buffer = gpu.buffer_from_slice::<usize>(vals)?;

    let grid = Grid::default().set_block_x(1024)?;

    gpu.launch_kernel(kernel, grid, args![
        buffer.as_device_ptr(),
        buffer.len(),
    ])?;
    gpu.synchronize()?;

    let result = buffer.to_vec()?;
    Ok(result)
}