//
// Generated by LLVM NVPTX Back-End
//

.version 3.2
.target core2
.address_size 64

	// .globl	compute_first_order_line
.func _ZN4core9panicking18panic_bounds_check17haef1e4b61ea88831E
()
;
.func _ZN4core9panicking5panic17hac00e92ea5a702b5E
()
;
.func _ZN4core5slice5index22slice_index_order_fail17hc482ef6d32e5f2f6E
()
;
.func _ZN4core5slice5index24slice_end_index_len_fail17h3593bfb2c4bc9257E
()
;
.func _ZN4core10intrinsics17const_eval_select17h04404e4e503ba667E
()
;
.func _ZN4core3ops8function6FnOnce9call_once17h767b5cd2a7d80765E
()
;
.func _ZN4core5slice5index27slice_end_index_len_fail_rt17hf62a721e020298cbE
()
;
.func _ZN4core9panicking9panic_fmt17hd1cbd9fdee4afd62E
()
;
.func _ZN4core10intrinsics17const_eval_select17hc95029312cc12bb8E
()
;
.func _ZN4core3ops8function6FnOnce9call_once17h9f3b1846ebb5ff5dE
()
;
.func _ZN4core5slice5index25slice_index_order_fail_rt17hd3ed23f6f06aedb2E
()
;

.visible .entry compute_first_order_line(
	.param .u64 compute_first_order_line_param_0,
	.param .u64 compute_first_order_line_param_1,
	.param .u64 compute_first_order_line_param_2,
	.param .f32 compute_first_order_line_param_3,
	.param .u64 compute_first_order_line_param_4,
	.param .u64 compute_first_order_line_param_5,
	.param .u64 compute_first_order_line_param_6,
	.param .u64 compute_first_order_line_param_7
)
{
	.reg .pred 	%p<25>;
	.reg .b32 	%r<24>;
	.reg .f32 	%f<66>;
	.reg .b64 	%rd<150>;

	// begin inline asm
	mov.u32 %r2, %tid.x;
	// end inline asm
	// begin inline asm
	mov.u32 %r3, %ctaid.x;
	// end inline asm
	// begin inline asm
	mov.u32 %r4, %ntid.x;
	// end inline asm
	// begin inline asm
	mov.u32 %r5, %ntid.x;
	// end inline asm
	// begin inline asm
	mov.u32 %r6, %nctaid.x;
	// end inline asm
	mul.lo.s32 	%r1, %r6, %r5;
	setp.eq.s32 	%p1, %r1, 0;
	@%p1 bra 	LBB0_36;
	ld.param.u64 	%rd59, [compute_first_order_line_param_7];
	ld.param.u64 	%rd58, [compute_first_order_line_param_6];
	cvt.u64.u32 	%rd6, %r1;
	and.b64  	%rd77, %rd59, -4294967296;
	setp.ne.s64 	%p2, %rd77, 0;
	@%p2 bra 	LBB0_3;
	bra.uni 	LBB0_2;
LBB0_3:
	div.u64 	%rd137, %rd59, %rd6;
	bra.uni 	LBB0_4;
LBB0_2:
	cvt.u32.u64 	%r8, %rd6;
	cvt.u32.u64 	%r9, %rd59;
	div.u32 	%r10, %r9, %r8;
	cvt.u64.u32 	%rd137, %r10;
LBB0_4:
	setp.eq.s64 	%p3, %rd58, 0;
	@%p3 bra 	LBB0_38;
	ld.param.u64 	%rd63, [compute_first_order_line_param_4];
	cvt.u64.u32 	%rd64, %r2;
	mul.lo.s32 	%r7, %r4, %r3;
	add.s64 	%rd65, %rd64, %rd63;
	cvt.u64.u32 	%rd66, %r7;
	add.s64 	%rd67, %rd65, %rd66;
	mul.lo.s64 	%rd68, %rd67, %rd63;
	add.s64 	%rd69, %rd68, -7046029254386353131;
	shr.u64 	%rd70, %rd69, 30;
	xor.b64  	%rd71, %rd70, %rd69;
	mul.lo.s64 	%rd72, %rd71, -4658895280553007687;
	shr.u64 	%rd73, %rd72, 27;
	xor.b64  	%rd74, %rd73, %rd72;
	mul.lo.s64 	%rd75, %rd74, -7723592293110705685;
	ld.param.u64 	%rd57, [compute_first_order_line_param_5];
	ld.param.u64 	%rd60, [compute_first_order_line_param_0];
	ld.param.u64 	%rd61, [compute_first_order_line_param_2];
	ld.param.u64 	%rd62, [compute_first_order_line_param_1];
	shr.u64 	%rd76, %rd75, 31;
	ld.param.f32 	%f19, [compute_first_order_line_param_3];
	cvta.to.global.u64 	%rd1, %rd61;
	cvta.to.global.u64 	%rd2, %rd62;
	cvta.to.global.u64 	%rd3, %rd60;
	xor.b64  	%rd4, %rd76, %rd75;
	mul.lo.s64 	%rd5, %rd58, %rd57;
	max.u64 	%rd10, %rd137, 1;
	setp.ne.s64 	%p4, %rd57, 0;
	selp.u64 	%rd11, 1, 0, %p4;
	selp.u32 	%r11, 1, 0, %p4;
	mul.wide.u32 	%rd80, %r11, 4;
	add.s64 	%rd12, %rd3, %rd80;
	mov.u64 	%rd79, 0;
	mov.u64 	%rd138, 1;
	setp.eq.s64 	%p18, %rd57, 0;
	mov.u64 	%rd13, %rd79;
	bra.uni 	LBB0_6;
LBB0_34:
	setp.lt.u64 	%p24, %rd13, %rd10;
	selp.u64 	%rd136, 1, 0, %p24;
	add.s64 	%rd138, %rd13, %rd136;
	@%p24 bra 	LBB0_6;
	bra.uni 	LBB0_35;
LBB0_6:
	mov.u64 	%rd14, %rd13;
	mov.u64 	%rd13, %rd138;
	add.s64 	%rd82, %rd4, %rd14;
	mul.lo.s64 	%rd83, %rd82, %rd4;
	shl.b64 	%rd84, %rd83, 13;
	xor.b64  	%rd85, %rd84, %rd83;
	shr.u64 	%rd86, %rd85, 7;
	xor.b64  	%rd87, %rd86, %rd85;
	shl.b64 	%rd88, %rd87, 17;
	xor.b64  	%rd15, %rd88, %rd87;
	rem.u64 	%rd16, %rd15, %rd58;
	shl.b64 	%rd89, %rd16, 3;
	add.s64 	%rd17, %rd2, %rd89;
	ld.global.u64 	%rd18, [%rd17];
	setp.eq.s64 	%p5, %rd16, 0;
	mov.u64 	%rd140, %rd79;
	@%p5 bra 	LBB0_9;
	add.s64 	%rd90, %rd16, -1;
	setp.ge.u64 	%p6, %rd90, %rd58;
	@%p6 bra 	LBB0_37;
	ld.global.u64 	%rd140, [%rd17+-8];
LBB0_9:
	sub.s64 	%rd21, %rd18, %rd140;
	setp.eq.s64 	%p7, %rd21, 0;
	@%p7 bra 	LBB0_34;
	add.s64 	%rd91, %rd15, -7046029254386353131;
	shr.u64 	%rd92, %rd91, 30;
	xor.b64  	%rd93, %rd92, %rd91;
	mul.lo.s64 	%rd94, %rd93, -4658895280553007687;
	shr.u64 	%rd95, %rd94, 27;
	xor.b64  	%rd96, %rd95, %rd94;
	mul.lo.s64 	%rd97, %rd96, -7723592293110705685;
	shr.u64 	%rd98, %rd97, 31;
	xor.b64  	%rd22, %rd98, %rd97;
	shl.b64 	%rd99, %rd22, 13;
	xor.b64  	%rd100, %rd99, %rd22;
	shr.u64 	%rd101, %rd100, 7;
	xor.b64  	%rd102, %rd101, %rd100;
	shl.b64 	%rd103, %rd102, 17;
	xor.b64  	%rd104, %rd103, %rd102;
	rem.u64 	%rd105, %rd104, %rd21;
	add.s64 	%rd23, %rd105, %rd140;
	setp.lt.u64 	%p8, %rd23, %rd59;
	@%p8 bra 	LBB0_12;
	bra.uni 	LBB0_11;
LBB0_12:
	shl.b64 	%rd106, %rd23, 2;
	add.s64 	%rd107, %rd1, %rd106;
	ld.global.u32 	%r12, [%rd107];
	add.s64 	%rd108, %rd22, -7046029254386353131;
	shr.u64 	%rd109, %rd108, 30;
	xor.b64  	%rd110, %rd109, %rd108;
	mul.lo.s64 	%rd111, %rd110, -4658895280553007687;
	shr.u64 	%rd112, %rd111, 27;
	xor.b64  	%rd113, %rd112, %rd111;
	mul.lo.s64 	%rd114, %rd113, -7723592293110705685;
	shr.u64 	%rd115, %rd114, 31;
	xor.b64  	%rd116, %rd115, %rd114;
	shl.b64 	%rd117, %rd116, 13;
	xor.b64  	%rd118, %rd117, %rd116;
	shr.u64 	%rd119, %rd118, 7;
	xor.b64  	%rd120, %rd119, %rd118;
	shl.b64 	%rd121, %rd120, 17;
	xor.b64  	%rd122, %rd121, %rd120;
	rem.u64 	%rd123, %rd122, %rd59;
	shl.b64 	%rd124, %rd123, 2;
	add.s64 	%rd125, %rd1, %rd124;
	ld.global.u32 	%r13, [%rd125];
	cvt.u64.u32 	%rd25, %r13;
	setp.eq.s64 	%p9, %rd16, %rd25;
	setp.eq.s32 	%p10, %r12, %r13;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_34;
	mul.lo.s64 	%rd26, %rd16, %rd57;
	add.s64 	%rd27, %rd26, %rd57;
	setp.lt.u64 	%p12, %rd27, %rd26;
	@%p12 bra 	LBB0_39;
	setp.gt.u64 	%p13, %rd27, %rd5;
	@%p13 bra 	LBB0_15;
	cvt.u64.u32 	%rd24, %r12;
	mul.lo.s64 	%rd44, %rd24, %rd57;
	add.s64 	%rd30, %rd44, %rd57;
	setp.lt.u64 	%p14, %rd30, %rd44;
	@%p14 bra 	LBB0_40;
	setp.gt.u64 	%p15, %rd30, %rd5;
	@%p15 bra 	LBB0_18;
	mul.lo.s64 	%rd43, %rd25, %rd57;
	add.s64 	%rd33, %rd43, %rd57;
	setp.lt.u64 	%p16, %rd33, %rd43;
	@%p16 bra 	LBB0_41;
	setp.gt.u64 	%p17, %rd33, %rd5;
	@%p17 bra 	LBB0_21;
	@%p18 bra 	LBB0_26;
	shl.b64 	%rd126, %rd26, 2;
	add.s64 	%rd28, %rd3, %rd126;
	shl.b64 	%rd127, %rd44, 2;
	add.s64 	%rd46, %rd3, %rd127;
	shl.b64 	%rd128, %rd43, 2;
	add.s64 	%rd47, %rd3, %rd128;
	ld.global.f32 	%f20, [%rd46];
	ld.global.f32 	%f21, [%rd47];
	ld.global.f32 	%f22, [%rd28];
	mul.rn.f32 	%f65, %f20, %f22;
	mul.rn.f32 	%f64, %f21, %f22;
	mul.rn.f32 	%f63, %f22, %f22;
	mul.rn.f32 	%f62, %f20, %f20;
	mul.rn.f32 	%f61, %f21, %f21;
	add.s64 	%rd142, %rd12, %rd127;
	add.s64 	%rd141, %rd12, %rd128;
	mov.u64 	%rd143, %rd11;
LBB0_24:
	setp.eq.s64 	%p19, %rd57, %rd143;
	@%p19 bra 	LBB0_27;
	shl.b64 	%rd131, %rd143, 2;
	add.s64 	%rd132, %rd28, %rd131;
	add.s64 	%rd143, %rd143, 1;
	ld.global.f32 	%f23, [%rd142];
	ld.global.f32 	%f24, [%rd141];
	ld.global.f32 	%f25, [%rd132];
	mul.rn.f32 	%f26, %f23, %f25;
	mul.rn.f32 	%f27, %f24, %f25;
	mul.rn.f32 	%f28, %f25, %f25;
	mul.rn.f32 	%f29, %f23, %f23;
	mul.rn.f32 	%f30, %f24, %f24;
	add.rn.f32 	%f65, %f65, %f26;
	add.rn.f32 	%f64, %f64, %f27;
	add.rn.f32 	%f63, %f63, %f28;
	add.rn.f32 	%f62, %f62, %f29;
	add.rn.f32 	%f61, %f61, %f30;
	add.s64 	%rd142, %rd142, 4;
	add.s64 	%rd141, %rd141, 4;
	bra.uni 	LBB0_24;
LBB0_27:
	mov.b32 	%r15, %f63;
	// begin inline asm
	sqrt.approx.f32 %r14, %r15;
	// end inline asm
	mov.b32 	%f31, %r14;
	add.rn.f32 	%f32, %f31, 0f34000000;
	mov.b32 	%r17, %f62;
	// begin inline asm
	sqrt.approx.f32 %r16, %r17;
	// end inline asm
	mov.b32 	%f33, %r16;
	add.rn.f32 	%f34, %f33, 0f34000000;
	mov.b32 	%r19, %f61;
	// begin inline asm
	sqrt.approx.f32 %r18, %r19;
	// end inline asm
	mov.b32 	%f35, %r18;
	add.rn.f32 	%f36, %f35, 0f34000000;
	mul.rn.f32 	%f37, %f32, %f34;
	mul.rn.f32 	%f38, %f32, %f36;
	neg.f32 	%f39, %f65;
	div.rn.f32 	%f40, %f39, %f37;
	mov.b32 	%r21, %f40;
	// begin inline asm
	ex2.approx.f32 %r20, %r21;
	// end inline asm
	mov.b32 	%f41, %r20;
	add.rn.f32 	%f42, %f41, 0f3F800000;
	rcp.rn.f32 	%f43, %f42;
	add.rn.f32 	%f44, %f43, 0fBF800000;
	mul.rn.f32 	%f16, %f44, %f19;
	neg.f32 	%f45, %f64;
	div.rn.f32 	%f46, %f45, %f38;
	mov.b32 	%r23, %f46;
	// begin inline asm
	ex2.approx.f32 %r22, %r23;
	// end inline asm
	mov.b32 	%f47, %r22;
	add.rn.f32 	%f48, %f47, 0f3F800000;
	div.rn.f32 	%f17, %f19, %f48;
	mov.u64 	%rd48, 0;
	mov.u64 	%rd45, %rd57;
LBB0_28:
	setp.eq.s64 	%p20, %rd45, 0;
	@%p20 bra 	LBB0_34;
	add.s64 	%rd134, %rd26, %rd48;
	setp.ge.u64 	%p21, %rd134, %rd5;
	@%p21 bra 	LBB0_42;
	setp.lt.u64 	%p22, %rd44, %rd5;
	@%p22 bra 	LBB0_31;
	bra.uni 	LBB0_43;
LBB0_31:
	setp.lt.u64 	%p23, %rd43, %rd5;
	@%p23 bra 	LBB0_32;
	bra.uni 	LBB0_33;
LBB0_32:
	shl.b64 	%rd135, %rd48, 2;
	add.s64 	%rd49, %rd28, %rd135;
	ld.global.f32 	%f18, [%rd49];
	ld.global.f32 	%f49, [%rd46];
	mul.rn.f32 	%f50, %f16, %f49;
	ld.global.f32 	%f51, [%rd47];
	mul.rn.f32 	%f52, %f17, %f51;
	add.rn.f32 	%f53, %f50, %f52;
	sub.rn.f32 	%f54, %f18, %f53;
	st.global.f32 	[%rd49], %f54;
	mul.rn.f32 	%f55, %f16, %f18;
	ld.global.f32 	%f56, [%rd46];
	sub.rn.f32 	%f57, %f56, %f55;
	st.global.f32 	[%rd46], %f57;
	mul.rn.f32 	%f58, %f17, %f18;
	ld.global.f32 	%f59, [%rd47];
	sub.rn.f32 	%f60, %f59, %f58;
	st.global.f32 	[%rd47], %f60;
	add.s64 	%rd47, %rd47, 4;
	add.s64 	%rd46, %rd46, 4;
	add.s64 	%rd45, %rd45, -1;
	add.s64 	%rd44, %rd44, 1;
	add.s64 	%rd43, %rd43, 1;
	add.s64 	%rd48, %rd48, 1;
	bra.uni 	LBB0_28;
LBB0_35:
	ret;
LBB0_42:
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core9panicking18panic_bounds_check17haef1e4b61ea88831E, 
	(
	);
	} // callseq 2
LBB0_43:
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core9panicking18panic_bounds_check17haef1e4b61ea88831E, 
	(
	);
	} // callseq 3
LBB0_33:
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core9panicking18panic_bounds_check17haef1e4b61ea88831E, 
	(
	);
	} // callseq 4
LBB0_37:
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core9panicking18panic_bounds_check17haef1e4b61ea88831E, 
	(
	);
	} // callseq 0
LBB0_11:
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core9panicking18panic_bounds_check17haef1e4b61ea88831E, 
	(
	);
	} // callseq 1
LBB0_36:
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core9panicking5panic17hac00e92ea5a702b5E, 
	(
	);
	} // callseq 13
LBB0_38:
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core9panicking5panic17hac00e92ea5a702b5E, 
	(
	);
	} // callseq 12
LBB0_39:
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core5slice5index22slice_index_order_fail17hc482ef6d32e5f2f6E, 
	(
	);
	} // callseq 11
LBB0_15:
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core5slice5index24slice_end_index_len_fail17h3593bfb2c4bc9257E, 
	(
	);
	} // callseq 10
LBB0_40:
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core5slice5index22slice_index_order_fail17hc482ef6d32e5f2f6E, 
	(
	);
	} // callseq 9
LBB0_18:
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core5slice5index24slice_end_index_len_fail17h3593bfb2c4bc9257E, 
	(
	);
	} // callseq 8
LBB0_41:
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core5slice5index22slice_index_order_fail17hc482ef6d32e5f2f6E, 
	(
	);
	} // callseq 7
LBB0_21:
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core5slice5index24slice_end_index_len_fail17h3593bfb2c4bc9257E, 
	(
	);
	} // callseq 6
LBB0_26:
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core9panicking5panic17hac00e92ea5a702b5E, 
	(
	);
	} // callseq 5

}
.func _ZN4core9panicking18panic_bounds_check17haef1e4b61ea88831E()
{


	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core9panicking9panic_fmt17hd1cbd9fdee4afd62E, 
	(
	);
	} // callseq 14

}
.func _ZN4core9panicking5panic17hac00e92ea5a702b5E()
{


	{ // callseq 15, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core9panicking9panic_fmt17hd1cbd9fdee4afd62E, 
	(
	);
	} // callseq 15

}
.func _ZN4core5slice5index22slice_index_order_fail17hc482ef6d32e5f2f6E()
{


	{ // callseq 16, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core10intrinsics17const_eval_select17hc95029312cc12bb8E, 
	(
	);
	} // callseq 16

}
.func _ZN4core5slice5index24slice_end_index_len_fail17h3593bfb2c4bc9257E()
{


	{ // callseq 17, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core10intrinsics17const_eval_select17h04404e4e503ba667E, 
	(
	);
	} // callseq 17

}
.func _ZN4core10intrinsics17const_eval_select17h04404e4e503ba667E()
{


	{ // callseq 18, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core3ops8function6FnOnce9call_once17h767b5cd2a7d80765E, 
	(
	);
	} // callseq 18

}
.func _ZN4core3ops8function6FnOnce9call_once17h767b5cd2a7d80765E()
{


	{ // callseq 19, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core5slice5index27slice_end_index_len_fail_rt17hf62a721e020298cbE, 
	(
	);
	} // callseq 19

}
.func _ZN4core5slice5index27slice_end_index_len_fail_rt17hf62a721e020298cbE()
{


	{ // callseq 20, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core9panicking9panic_fmt17hd1cbd9fdee4afd62E, 
	(
	);
	} // callseq 20

}
.func _ZN4core9panicking9panic_fmt17hd1cbd9fdee4afd62E()
{


	trap;

}
.func _ZN4core10intrinsics17const_eval_select17hc95029312cc12bb8E()
{


	{ // callseq 21, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core3ops8function6FnOnce9call_once17h9f3b1846ebb5ff5dE, 
	(
	);
	} // callseq 21

}
.func _ZN4core3ops8function6FnOnce9call_once17h9f3b1846ebb5ff5dE()
{


	{ // callseq 22, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core5slice5index25slice_index_order_fail_rt17hd3ed23f6f06aedb2E, 
	(
	);
	} // callseq 22

}
.func _ZN4core5slice5index25slice_index_order_fail_rt17hd3ed23f6f06aedb2E()
{


	{ // callseq 23, 0
	.reg .b32 temp_param_reg;
	call.uni 
	_ZN4core9panicking9panic_fmt17hd1cbd9fdee4afd62E, 
	(
	);
	} // callseq 23

}
