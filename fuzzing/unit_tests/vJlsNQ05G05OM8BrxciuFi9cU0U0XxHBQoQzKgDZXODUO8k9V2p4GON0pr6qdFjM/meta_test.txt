MetaParams {
    random_spanning_arborescence_kruskal: RandomSpanningArborescenceKruskalParams {
        random_state: 18173213292807796017,
        undesired_edge_types: Some(
            {},
        ),
        verbose: true,
    },
    spanning_arborescence_kruskal: SpanningArborescenceKruskalParams {
        verbose: false,
    },
    spanning_arborescence: SpanningArborescenceParams {
        verbose: false,
    },
    connected_components: ConnectedComponentsParams {
        verbose: false,
    },
    get_node_label_prediction_tuple_from_node_ids: GetNodeLabelPredictionTupleFromNodeIdsParams {
        node_ids: [],
        random_state:    0,
        include_central_node: false,
        offset:    0,
        max_neighbours: None,
    },
    is_singleton_from_node_id: IsSingletonFromNodeIdParams {
        node_id:    0,
    },
    is_singleton_with_selfloops_from_node_id: IsSingletonWithSelfloopsFromNodeIdParams {
        node_id:    0,
    },
    has_edge_from_node_ids: HasEdgeFromNodeIdsParams {
        src:    0,
        dst:    0,
    },
    has_edge_from_node_ids_and_edge_type_id: HasEdgeFromNodeIdsAndEdgeTypeIdParams {
        src:    0,
        dst:    0,
        edge_type: None,
    },
    is_trap_node_from_node_id: IsTrapNodeFromNodeIdParams {
        node_id:    0,
    },
    enable: EnableParams {
        vector_sources: false,
        vector_destinations: false,
        vector_cumulative_node_degrees: false,
        cache_size: None,
    },
    iter_edge_ids_from_node_ids: IterEdgeIdsFromNodeIdsParams {
        src:    0,
        dst:    0,
    },
    get_node_ids_from_edge_id: GetNodeIdsFromEdgeIdParams {
        edge_id: 16572178149110513664,
    },
    get_edge_id_from_node_ids: GetEdgeIdFromNodeIdsParams {
        src: 20386,
        dst:    0,
    },
    get_node_ids_and_edge_type_id_from_edge_id: GetNodeIdsAndEdgeTypeIdFromEdgeIdParams {
        edge_id:    0,
    },
    get_node_ids_and_edge_type_id_and_edge_weight_from_edge_id: GetNodeIdsAndEdgeTypeIdAndEdgeWeightFromEdgeIdParams {
        edge_id:    0,
    },
    get_top_k_central_node_ids: GetTopKCentralNodeIdsParams {
        k:    0,
    },
    get_node_degree_from_node_id: GetNodeDegreeFromNodeIdParams {
        node_id:    0,
    },
    get_top_k_central_node_names: GetTopKCentralNodeNamesParams {
        k:    0,
    },
    get_node_type_id_from_node_id: GetNodeTypeIdFromNodeIdParams {
        node_id:    0,
    },
    get_edge_type_id_from_edge_id: GetEdgeTypeIdFromEdgeIdParams {
        edge_id:    0,
    },
    get_node_type_name_from_node_id: GetNodeTypeNameFromNodeIdParams {
        node_id:    0,
    },
    get_edge_type_name_from_edge_id: GetEdgeTypeNameFromEdgeIdParams {
        edge_id:    0,
    },
    get_edge_type_name_from_edge_type_id: GetEdgeTypeNameFromEdgeTypeIdParams {
        edge_type_id:    0,
    },
    get_edge_weight_from_edge_id: GetEdgeWeightFromEdgeIdParams {
        edge_id:    0,
    },
    get_edge_weight_from_node_ids: GetEdgeWeightFromNodeIdsParams {
        src:    0,
        dst:    0,
    },
    get_edge_weight_from_node_ids_and_edge_type_id: GetEdgeWeightFromNodeIdsAndEdgeTypeIdParams {
        src:    0,
        dst:    0,
        edge_type: None,
    },
    get_node_name_from_node_id: GetNodeNameFromNodeIdParams {
        node_id:    0,
    },
    get_edge_count_from_edge_type_id: GetEdgeCountFromEdgeTypeIdParams {
        edge_type_id: None,
    },
    get_node_count_from_node_type_id: GetNodeCountFromNodeTypeIdParams {
        node_type_id: None,
    },
    get_destination_node_id_from_edge_id: GetDestinationNodeIdFromEdgeIdParams {
        edge_id:    0,
    },
    get_neighbour_node_ids_from_node_id: GetNeighbourNodeIdsFromNodeIdParams {
        node_id:    0,
    },
    get_minmax_edge_ids_from_node_ids: GetMinmaxEdgeIdsFromNodeIdsParams {
        src:    0,
        dst:    0,
    },
    get_edge_id_from_node_ids_and_edge_type_id: GetEdgeIdFromNodeIdsAndEdgeTypeIdParams {
        src:    0,
        dst:    0,
        edge_type: None,
    },
    get_edge_type_ids_from_edge_type_names: GetEdgeTypeIdsFromEdgeTypeNamesParams {
        edge_type_names: [],
    },
    get_node_type_ids_from_node_type_names: GetNodeTypeIdsFromNodeTypeNamesParams {
        node_type_names: [],
    },
    get_minmax_edge_ids_from_source_node_id: GetMinmaxEdgeIdsFromSourceNodeIdParams {
        src:    0,
    },
    get_node_type_name_from_node_type_id: GetNodeTypeNameFromNodeTypeIdParams {
        node_type_id:    0,
    },
    get_node_type_names_from_node_type_ids: GetNodeTypeNamesFromNodeTypeIdsParams {
        node_type_ids: [],
    },
    filter: FilterParams {
        node_names: None,
        node_types: None,
        edge_types: None,
        min_weight: None,
        max_weight: None,
        verbose: false,
    },
    validate_node_id: ValidateNodeIdParams {
        node_id:    0,
    },
    validate_edge_id: ValidateEdgeIdParams {
        edge_id:    0,
    },
    validate_node_type_id: ValidateNodeTypeIdParams {
        node_type_id: None,
    },
    validate_edge_type_id: ValidateEdgeTypeIdParams {
        edge_type_id: None,
    },
    degrees_product: DegreesProductParams {
        one:    0,
        two:    0,
    },
    jaccard_index: JaccardIndexParams {
        one:    0,
        two:    0,
    },
    adamic_adar_index: AdamicAdarIndexParams {
        one:    0,
        two:    0,
    },
    resource_allocation_index: ResourceAllocationIndexParams {
        one:    0,
        two:    0,
    },
    remove: RemoveParams {
        allow_nodes_set: None,
        deny_nodes_set: None,
        allow_node_types_set: None,
        deny_node_types_set: None,
        allow_edge_set: None,
        deny_edge_set: None,
        allow_edge_types_set: None,
        deny_edge_types_set: None,
        weights: false,
        node_types: false,
        edge_types: false,
        singletons: false,
        selfloops: false,
        verbose: false,
    },
    remove_components: RemoveComponentsParams {
        node_names: None,
        node_types: None,
        edge_types: None,
        minimum_component_size: None,
        top_k_components: None,
        verbose: false,
    },
    set_name: SetNameParams {
        name: "\u{0}\u{0}\u{0}\u{7}\u{0}\u{0}\u{0}\u{19}-680]",
    },
    set_all_edge_types: SetAllEdgeTypesParams {
        edge_type: "",
    },
    set_all_node_types: SetAllNodeTypesParams {
        node_type: "",
    },
    encode_edge: EncodeEdgeParams {
        src: 2040298727,
        dst: 3358896658,
    },
    decode_edge: DecodeEdgeParams {
        edge: 1157442765409226924,
    },
    get_bipartite_edges: GetBipartiteEdgesParams {
        removed_existing_edges: None,
        first_nodes_set: None,
        second_nodes_set: None,
        first_node_types_set: None,
        second_node_types_set: None,
    },
    get_bipartite_edge_names: GetBipartiteEdgeNamesParams {
        removed_existing_edges: None,
        first_nodes_set: None,
        second_nodes_set: None,
        first_node_types_set: None,
        second_node_types_set: None,
    },
    get_star_edges: GetStarEdgesParams {
        central_node: "\u{10}\u{10}\u{10}\u{10}\u{10}\u{10}\u{10}\u{10}\u{10}\u{10}\u{10}\u{10}\u{10}\u{10}\u{10}\u{10}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{0}\u{7}\u{0}\u{0}\u{0}\u{19}-680]",
        removed_existing_edges: Some(
            false,
        ),
        star_points_nodes_set: Some(
            {},
        ),
        star_points_node_types_set: Some(
            {},
        ),
    },
    get_star_edge_names: GetStarEdgeNamesParams {
        central_node: "H",
        removed_existing_edges: Some(
            false,
        ),
        star_points_nodes_set: None,
        star_points_node_types_set: Some(
            {
                "",
                "y",
            },
        ),
    },
    get_clique_edges: GetCliqueEdgesParams {
        directed: Some(
            true,
        ),
        allow_selfloops: Some(
            false,
        ),
        removed_existing_edges: None,
        allow_node_type_set: None,
        allow_node_set: Some(
            {},
        ),
    },
    get_clique_edge_names: GetCliqueEdgeNamesParams {
        directed: None,
        allow_selfloops: Some(
            false,
        ),
        removed_existing_edges: Some(
            true,
        ),
        allow_node_type_set: None,
        allow_node_set: None,
    },
    textual_report: TextualReportParams {
        verbose: true,
    },
    get_connected_components_number: GetConnectedComponentsNumberParams {
        verbose: true,
    },
    get_sources: GetSourcesParams {
        directed: true,
    },
    get_source_names: GetSourceNamesParams {
        directed: true,
    },
    get_destinations: GetDestinationsParams {
        directed: true,
    },
    get_destination_names: GetDestinationNamesParams {
        directed: false,
    },
    get_edges: GetEdgesParams {
        directed: true,
    },
    get_edge_node_names: GetEdgeNodeNamesParams {
        directed: false,
    },
    get_node_connected_component_ids: GetNodeConnectedComponentIdsParams {
        verbose: false,
    },
    iter_source_node_ids: IterSourceNodeIdsParams {
        directed: false,
    },
    par_iter_source_node_ids: ParIterSourceNodeIdsParams {
        directed: false,
    },
    iter_destination_node_ids: IterDestinationNodeIdsParams {
        directed: false,
    },
    par_iter_destination_node_ids: ParIterDestinationNodeIdsParams {
        directed: false,
    },
    iter_edge_ids: IterEdgeIdsParams {
        directed: false,
    },
    iter_edges: IterEdgesParams {
        directed: false,
    },
    par_iter_edge_ids: ParIterEdgeIdsParams {
        directed: true,
    },
    par_iter_edges: ParIterEdgesParams {
        directed: false,
    },
    iter_edge_node_ids_and_edge_type_id: IterEdgeNodeIdsAndEdgeTypeIdParams {
        directed: false,
    },
    iter_edge_node_names_and_edge_type_name: IterEdgeNodeNamesAndEdgeTypeNameParams {
        directed: true,
    },
    par_iter_edge_node_names_and_edge_type_name: ParIterEdgeNodeNamesAndEdgeTypeNameParams {
        directed: true,
    },
    par_iter_edge_node_ids_and_edge_type_id: ParIterEdgeNodeIdsAndEdgeTypeIdParams {
        directed: false,
    },
    par_iter_edge_node_names_and_edge_type_name_and_edge_weight: ParIterEdgeNodeNamesAndEdgeTypeNameAndEdgeWeightParams {
        directed: false,
    },
    iter_edge_node_names_and_edge_type_name_and_edge_weight: IterEdgeNodeNamesAndEdgeTypeNameAndEdgeWeightParams {
        directed: false,
    },
    par_iter_edge_node_ids_and_edge_type_id_and_edge_weight: ParIterEdgeNodeIdsAndEdgeTypeIdAndEdgeWeightParams {
        directed: true,
    },
    iter_edge_node_ids_and_edge_type_id_and_edge_weight: IterEdgeNodeIdsAndEdgeTypeIdAndEdgeWeightParams {
        directed: true,
    },
    iter_unique_edge_node_ids: IterUniqueEdgeNodeIdsParams {
        directed: false,
    },
    connected_holdout: ConnectedHoldoutParams {
        random_state: 11891720208740423473,
        train_size: 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004945974957907641,
        edge_types: Some(
            [
                None,
                None,
            ],
        ),
        include_all_edge_types: true,
        verbose: false,
    },
    random_holdout: RandomHoldoutParams {
        random_state: 14227403406906385169,
        train_size: 3639639455512554000000000000000000000000000000000000.0,
        include_all_edge_types: false,
        edge_types: None,
        min_number_overlaps: None,
        verbose: false,
    },
    node_label_holdout: NodeLabelHoldoutParams {
        train_size: 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010676376038882155,
        use_stratification: false,
        random_state: 16973848813574769422,
    },
    edge_label_holdout: EdgeLabelHoldoutParams {
        train_size: 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000518740715958,
        use_stratification: false,
        random_state:    0,
    },
    random_subgraph: RandomSubgraphParams {
        random_state:    0,
        nodes_number:    0,
        verbose: false,
    },
    kfold: KfoldParams {
        k:    0,
        k_index:    0,
        edge_types: None,
        random_state:    0,
        verbose: false,
    },
    from_vec: FromVecHarnessParams {
        directed: false,
        directed_edge_list: false,
        ignore_duplicated_nodes: false,
        ignore_duplicated_edges: false,
        verbose: false,
        numeric_edge_types_ids: false,
        numeric_node_ids: false,
        numeric_edge_node_ids: false,
        numeric_node_types_ids: false,
        has_node_types: false,
        has_edge_types: false,
        has_edge_weights: false,
        edges: [],
        nodes: None,
    },
}